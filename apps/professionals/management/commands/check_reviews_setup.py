# apps/professionals/management/commands/check_reviews_setup.py

from django.core.management.base import BaseCommand
from apps.appointments.models import Appointment
from apps.professionals.models import Review
from django.contrib.auth import get_user_model

User = get_user_model()

class Command(BaseCommand):
    help = 'Verifica el estado del sistema de rese√±as'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('=== Estado del Sistema de Rese√±as ===\n'))
        
        # Verificar citas
        total_appointments = Appointment.objects.count()
        completed_appointments = Appointment.objects.filter(status='completed').count()
        
        self.stdout.write(f'üìÖ Total de citas: {total_appointments}')
        self.stdout.write(f'‚úÖ Citas completadas: {completed_appointments}')
        
        # Verificar usuarios
        patients = User.objects.filter(user_type='patient').count()
        professionals = User.objects.filter(user_type='professional').count()
        
        self.stdout.write(f'üë§ Pacientes: {patients}')
        self.stdout.write(f'üë®‚Äç‚öïÔ∏è Profesionales: {professionals}')
        
        # Verificar rese√±as
        total_reviews = Review.objects.count()
        self.stdout.write(f'‚≠ê Total de rese√±as: {total_reviews}')
        
        # Mostrar algunas citas completadas
        if completed_appointments > 0:
            self.stdout.write('\nüìã Citas completadas disponibles para rese√±a:')
            for appointment in Appointment.objects.filter(status='completed')[:5]:
                has_review = hasattr(appointment, 'review')
                review_status = '‚úÖ Ya tiene rese√±a' if has_review else '‚ùå Sin rese√±a'
                self.stdout.write(
                    f'  ‚Ä¢ ID {appointment.id}: {appointment.patient.get_full_name()} ‚Üí '
                    f'{appointment.psychologist.get_full_name()} ({review_status})'
                )
        else:
            self.stdout.write(self.style.WARNING('\n‚ö†Ô∏è  No hay citas completadas para rese√±ar'))
            
        # Mostrar rese√±as existentes
        if total_reviews > 0:
            self.stdout.write('\n‚≠ê Rese√±as existentes:')
            for review in Review.objects.all()[:5]:
                self.stdout.write(
                    f'  ‚Ä¢ {review.patient.get_full_name()} ‚Üí '
                    f'{review.professional.user.get_full_name()}: {review.rating}/5 estrellas'
                )